Automated deployment for DeepCortex platform

Running the entire deployment

1) Create a folder called environments on your computer.

2) Place the deepcortex-settings.tfvars file under this "environmnets" directory.

3) Fill in the necessary variables in deepcortex-settings.tfvars.

4) Export the following variables in your terminal. The this can be done by filling in envar.sh with the proper values and then sourcing this file from your terminal (source envar.sh).

CONFIG - the name of the config file to use (should be deepcortex-settings).
AWS_ACCESS_KEY_ID - the access key that should be used to deploy in AWS.
AWS_SECRET_ACCESS_KEY - the secret key that should be used to deploy in AWS.
CUSTOMER_KEY - the DC/OS enterprise key
DCOS_USERNAME - the username you'd like to use to login to the DC/OS cluster
DCOS_PASSWORD - the password you'd like to use to login to the DC/OS cluster (avoid special characters used in bash such as "#", ";", "$", etc.)

5) Run "docker login -u falcondeepcortex" and enter the password: 6apXmvzquPKGDwzx.

6) Run "docker pull deepcortex/scorpius-deployment:falcon".

7) Run the following docker command replacing /path/to/environments with the path to the environments directory you created in step 1.

docker run \
  -v </path/to/environments>:/opt/deploy/environments \
  -e CONFIG=${CONFIG} \
  -e AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \
  -e AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \
  -e CUSTOMER_KEY=${CUSTOMER_KEY} \
  -e DCOS_USERNAME=${DCOS_USERNAME} \
  -e DCOS_PASSWORD=${DCOS_PASSWORD} \
  deepcortex/scorpius-deployment:falcon

8) Once your terminal output states the deployment is complete you can access the DeepCortex UI.

### Additional Docker Commands ###

Destroying the entire deployment

docker run \
  -v ~/Desktop/environments:/opt/deploy/environments \
  -e CONFIG=${CONFIG} \
  -e AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \
  -e AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \
  -e CUSTOMER_KEY=${CUSTOMER_KEY} \
  -e DCOS_USERNAME=${DCOS_USERNAME} \
  -e DCOS_PASSWORD=${DCOS_PASSWORD} \
  -it --entrypoint "/bin/bash" deepcortex/scorpius-deployment:falcon /opt/deploy/destroy.sh

Building just the platform (DC/OS cluster)

docker run \
  -v ~/Desktop/environments:/opt/deploy/environments \
  -e CONFIG=${CONFIG} \
  -e AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \
  -e AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \
  -e CUSTOMER_KEY=${CUSTOMER_KEY} \
  -e DCOS_USERNAME=${DCOS_USERNAME} \
  -e DCOS_PASSWORD=${DCOS_PASSWORD} \
  -it --entrypoint "/bin/bash" deepcortex/scorpius-deployment:falcon /opt/deploy/build.sh -s platform

all optional arguments:
  -b: shutdown boostrap - can be set to true destroy bootstrap node after the cluster deploys
  -g: gpu on start - can be set to false to exclude spinning up a gpu node after the cluster deploys
  -m: deploy mode - can be set to simple to exclude download of DC/OS cli and extra output
  -s: stacks - a list of comma separated values to overwrite which terraform stacks to build
  -p: packer - can be set to false to exclude packer builds

Destroying just the platform (DC/OS cluster)

docker run \
  -v ~/Desktop/environments:/opt/deploy/environments \
  -e CONFIG=${CONFIG} \
  -e AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \
  -e AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \
  -e CUSTOMER_KEY=${CUSTOMER_KEY} \
  -e DCOS_USERNAME=${DCOS_USERNAME} \
  -e DCOS_PASSWORD=${DCOS_PASSWORD} \
  -it --entrypoint "/bin/bash" deepcortex/scorpius-deployment:falcon /opt/deploy/destroy.sh -s platform

all optional arguments:
  -s: stacks - a list of comma separated values to overwrite which terraform stacks to destroy
