---
- hosts: all
  become: yes
  pre_tasks:
    - name: gather ec2 facts
      action: ec2_metadata_facts
      tags:
        - always
  vars:
    filebeat_config_registry_file: /var/lib/filebeat/registry
    filebeat_config_prospectors: |
      filebeat:
        prospectors:
          -
            input_type: log
            paths:
              - /var/lib/mesos/slave/slaves/*/frameworks/*/executors/*/runs/latest/stdout
              - /var/lib/mesos/slave/slaves/*/frameworks/*/executors/*/runs/latest/stderr
            document_type: "frameworks"
            registry_file: "{{filebeat_config_registry_file}}_frameworks"
            exclude_lines: ["DEBUG"]
            tail_files: true
          -
            input_type: log
            paths:
              - /var/log/mesos/*.log
            document_type: "mesos"
            registry_file: "{{filebeat_config_registry_file}}_mesos"
            exclude_lines: ["DEBUG"]
            tail_files: true
          -
            input_type: log
            paths:
              - /var/log/dcos/dcos.log
            document_type: "dcos"
            registry_file: "{{filebeat_config_registry_file}}_dcos"
            exclude_lines: ["DEBUG"]
            tail_files: true
    filebeat_config_output: |
      output:
        elasticsearch:
          hosts: [ "coordinator.elastic.l4lb.thisdcos.directory:9200" ]
    filebeat_config_shipper: |
      shipper:
    filebeat_config_logging: |
      logging:
        files:
          rotateeverybytes: 10485760 # = 10MB
    filebeat_config: |
      {{filebeat_config_prospectors}}
      {{filebeat_config_output}}
      {{filebeat_config_shipper}}
      {{filebeat_config_logging}}
  roles:
    - common
    - docker
    - filebeat

- hosts: bootstrap
  become: yes
  vars:
    dcos_download: "{{dcos_download_url}}"
    security: disabled
    registry: true
    docker_registry_auth_token: "ZGVlcGNvcnRleHJlYWQ6bnkyUDJwUlVMWHcyY1Vydg=="
    superuser_username: "{{dcos_username}}"
    enterprise_dcos: true
    resolvers:
      - provider_dns_via_user_data
      - 8.8.4.4
      - 8.8.8.8
  roles:
    - bootstrap

- hosts: master
  become: yes
  roles:
    - services
    - deployer

- hosts: slave
  become: yes
  vars:
    main_user: "{{main_user}}"
  roles:
    - services

- hosts: captain
  become: yes
  vars:
    online_prediction: "{{online_prediction}}"
    java_packages:
        - java-1.8.0-openjdk
    nodejs_install_npm_user: root
    nodejs_npm_global_packages:
      - name: mongodb
        version: 2.2.33
      - name: east
        version: 0.5.7
      - name: east-mongo
        version: 0.3.3
  tasks:
    - include_role:
        name: postgresql
      when: "online_prediction == 'true'"
  roles:
    - captain
    - deployer
    - mongodb
    - nodejs
    - java

- hosts: gpu-slave
  become: yes
  roles:
    - services
    - gpu
